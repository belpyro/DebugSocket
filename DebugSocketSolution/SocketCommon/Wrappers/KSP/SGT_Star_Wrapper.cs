//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18444
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrappers {
    
    
    [System.SerializableAttribute()]
    public class SGT_Star_Wrapper {
        
        public Mesh_Wrapper SurfaceMesh;
        
        public Texture_Wrapper SurfaceTexture;
        
        public float SurfaceRadius;
        
        public float Oblateness;
        
        public float SurfaceRotationPeriod;
        
        public bool AtmosphereSurfacePerPixel;
        
        public Mesh_Wrapper AtmosphereMesh;
        
        public float AtmosphereHeight;
        
        public float AtmosphereFalloff;
        
        public float AtmosphereSurfaceFalloff;
        
        public float AtmosphereSkyFalloff;
        
        public float AtmosphereSkyAltitude;
        
        public SGT.ColourGradient AtmosphereDensityColour;
        
        public int SurfaceRenderQueue;
        
        public int AtmosphereRenderQueue;
        
        public Camera_Wrapper Observer;
        
        public float SurfacePolarRadius;
        
        public float SurfaceEquatorialRadius;
        
        public float AtmospherePolarRadius;
        
        public float AtmosphereEquatorialRadius;
        
        public UnityEngine.Object[] UndoTargets;
        
        public float UniformScale;
        
        public bool useGUILayout;
        
        public bool enabled;
        
        public Transform_Wrapper transform;
        
        public Rigidbody_Wrapper rigidbody;
        
        public Rigidbody2D_Wrapper rigidbody2D;
        
        public Camera_Wrapper camera;
        
        public Light_Wrapper light;
        
        public Animation_Wrapper animation;
        
        public ConstantForce_Wrapper constantForce;
        
        public Renderer_Wrapper renderer;
        
        public AudioSource_Wrapper audio;
        
        public GUIText_Wrapper guiText;
        
        public NetworkView_Wrapper networkView;
        
        public GUIElement_Wrapper guiElement;
        
        public GUITexture_Wrapper guiTexture;
        
        public Collider_Wrapper collider;
        
        public Collider2D_Wrapper collider2D;
        
        public HingeJoint_Wrapper hingeJoint;
        
        public ParticleEmitter_Wrapper particleEmitter;
        
        public ParticleSystem_Wrapper particleSystem;
        
        public GameObject_Wrapper gameObject;
        
        public bool active;
        
        public string tag;
        
        public string name;
        
        public UnityEngine.HideFlags hideFlags;
    }
}
