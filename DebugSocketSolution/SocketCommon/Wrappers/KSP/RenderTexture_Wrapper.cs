//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34014
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrappers {
    
    
    [System.SerializableAttribute()]
    public class RenderTexture_Wrapper {
        
        private int _width;
        
        private int _height;
        
        private int _depth;
        
        private bool _ispoweroftwo;
        
        private bool _srgb;
        
        private UnityEngine.RenderTextureFormat _format;
        
        private bool _usemipmap;
        
        private bool _generatemips;
        
        private bool _iscubemap;
        
        private bool _isvolume;
        
        private int _volumedepth;
        
        private int _antialiasing;
        
        private bool _enablerandomwrite;
        
        private RenderBuffer_Wrapper _colorbuffer;
        
        private RenderBuffer_Wrapper _depthbuffer;
        
        private UnityEngine.FilterMode _filtermode;
        
        private int _anisolevel;
        
        private UnityEngine.TextureWrapMode _wrapmode;
        
        private float _mipmapbias;
        
        private Vector2_Wrapper _texelsize;
        
        private string _name;
        
        private UnityEngine.HideFlags _hideflags;
        
        public int width {
            get {
                return _width;
            }
            set {
                _width = value;
            }
        }
        
        public int height {
            get {
                return _height;
            }
            set {
                _height = value;
            }
        }
        
        public int depth {
            get {
                return _depth;
            }
            set {
                _depth = value;
            }
        }
        
        public bool isPowerOfTwo {
            get {
                return _ispoweroftwo;
            }
            set {
                _ispoweroftwo = value;
            }
        }
        
        public bool sRGB {
            get {
                return _srgb;
            }
            set {
                _srgb = value;
            }
        }
        
        public UnityEngine.RenderTextureFormat format {
            get {
                return _format;
            }
            set {
                _format = value;
            }
        }
        
        public bool useMipMap {
            get {
                return _usemipmap;
            }
            set {
                _usemipmap = value;
            }
        }
        
        public bool generateMips {
            get {
                return _generatemips;
            }
            set {
                _generatemips = value;
            }
        }
        
        public bool isCubemap {
            get {
                return _iscubemap;
            }
            set {
                _iscubemap = value;
            }
        }
        
        public bool isVolume {
            get {
                return _isvolume;
            }
            set {
                _isvolume = value;
            }
        }
        
        public int volumeDepth {
            get {
                return _volumedepth;
            }
            set {
                _volumedepth = value;
            }
        }
        
        public int antiAliasing {
            get {
                return _antialiasing;
            }
            set {
                _antialiasing = value;
            }
        }
        
        public bool enableRandomWrite {
            get {
                return _enablerandomwrite;
            }
            set {
                _enablerandomwrite = value;
            }
        }
        
        public RenderBuffer_Wrapper colorBuffer {
            get {
                return this._colorbuffer;
            }
            set {
                this._colorbuffer = value;
            }
        }
        
        public RenderBuffer_Wrapper depthBuffer {
            get {
                return this._depthbuffer;
            }
            set {
                this._depthbuffer = value;
            }
        }
        
        public UnityEngine.FilterMode filterMode {
            get {
                return _filtermode;
            }
            set {
                _filtermode = value;
            }
        }
        
        public int anisoLevel {
            get {
                return _anisolevel;
            }
            set {
                _anisolevel = value;
            }
        }
        
        public UnityEngine.TextureWrapMode wrapMode {
            get {
                return _wrapmode;
            }
            set {
                _wrapmode = value;
            }
        }
        
        public float mipMapBias {
            get {
                return _mipmapbias;
            }
            set {
                _mipmapbias = value;
            }
        }
        
        public Vector2_Wrapper texelSize {
            get {
                return this._texelsize;
            }
            set {
                this._texelsize = value;
            }
        }
        
        public string name {
            get {
                return _name;
            }
            set {
                _name = value;
            }
        }
        
        public UnityEngine.HideFlags hideFlags {
            get {
                return _hideflags;
            }
            set {
                _hideflags = value;
            }
        }
    }
}
