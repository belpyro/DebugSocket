//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18444
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrappers {
    
    
    [System.SerializableAttribute()]
    public class PlanetQuadTreeController_Wrapper {
        
        public Texture2D_Wrapper heightMap;
        
        public int seed;
        
        public float smoothness;
        
        public float deformity;
        
        public float continentalDeformity;
        
        public int noisePasses;
        
        public float noiseFalloff;
        
        public float mesaVsPlainsBias;
        
        public float plainsVsMountainSmoothness;
        
        public float plainsVsMountainThreshold;
        
        public float plainSmoothness;
        
        public float waterLevel;
        
        public float waterThreshold;
        
        public float heightfieldBalance;
        
        public Select_Wrapper terrainHeightMap;
        
        public float parameterScaleFactor;
        
        public float radius;
        
        public float circ;
        
        public PlanetQuad[] quads;
        
        public Transform_Wrapper target;
        
        public Transform_Wrapper secondaryTarget;
        
        public Transform_Wrapper sun;
        
        public PhysicMaterial_Wrapper surfaceMaterial;
        
        public GameObject_Wrapper surfaceQuadPrefab;
        
        public GameObject_Wrapper oceanQuadPrefab;
        
        public Shader_Wrapper surfaceShader;
        
        public Shader_Wrapper fallbackSurfaceShader;
        
        public float quadSize;
        
        public int maxLevel;
        
        public int maxOceanLevel;
        
        public OceanFXController_Wrapper oceanFxController;
        
        public int heightfieldAtLvl;
        
        public int noisefieldAtLvl;
        
        public int colliderAtLvl;
        
        public bool colliderAtLastLvl;
        
        public float sphereColliderRadiusOffset;
        
        public Vector3d_Wrapper relativeTargetPosition;
        
        public Vector3d_Wrapper relative2ndTargetPosition;
        
        public float targetDistance;
        
        public float secondaryTargetDistance;
        
        public float targetAltitude;
        
        public float secondaryTargetAltitude;
        
        public float minDetailDistance;
        
        public float subdivisionThreshold;
        
        public float collapseThreshold;
        
        public float fadeStartAltitude;
        
        public float fadeEndAltitude;
        
        public float horizonFadeStart;
        
        public float horizonFadeEnd;
        
        public float masterOpacity;
        
        public Vector4_Wrapper planetPos;
        
        public bool hideUnseenQuads;
        
        public bool DEBUG_ignoreHeightField;
        
        public bool DEBUG_useSingleMaterial;
        
        public bool forceRebuild;
        
        public int maxSubdivisionsPerFrame;
        
        public System.Collections.Generic.List<PlanetQuad> quadStack;
        
        public Transform_Wrapper Transform;
        
        public float horizonDistance;
        
        public float horizonAngle;
        
        public float visibleRadius;
        
        public float fadeStart;
        
        public float fadeEnd;
        
        public Vector4_Wrapper targetPos;
        
        public bool useGUILayout;
        
        public bool enabled;
        
        public Transform_Wrapper transform;
        
        public Rigidbody_Wrapper rigidbody;
        
        public Rigidbody2D_Wrapper rigidbody2D;
        
        public Camera_Wrapper camera;
        
        public Light_Wrapper light;
        
        public Animation_Wrapper animation;
        
        public ConstantForce_Wrapper constantForce;
        
        public Renderer_Wrapper renderer;
        
        public AudioSource_Wrapper audio;
        
        public GUIText_Wrapper guiText;
        
        public NetworkView_Wrapper networkView;
        
        public GUIElement_Wrapper guiElement;
        
        public GUITexture_Wrapper guiTexture;
        
        public Collider_Wrapper collider;
        
        public Collider2D_Wrapper collider2D;
        
        public HingeJoint_Wrapper hingeJoint;
        
        public ParticleEmitter_Wrapper particleEmitter;
        
        public ParticleSystem_Wrapper particleSystem;
        
        public GameObject_Wrapper gameObject;
        
        public bool active;
        
        public string tag;
        
        public string name;
        
        public UnityEngine.HideFlags hideFlags;
    }
}
