//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18444
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrappers {
    
    
    [System.SerializableAttribute()]
    [SocketCommon.Attributes.InstanceNameAttribute("fetch")]
    public class TimeWarp_Wrapper {
        
        public float[] warpRates;
        
        public float[] altitudeLimits;
        
        public float[] physicsWarpRates;
        
        public int maxPhysicsRate_index;
        
        public int maxModeSwitchRate_index;
        
        public TimeWarp.Modes Mode;
        
        public ScreenSafeUISliderButton_Wrapper warpHighButton;
        
        public ScreenSafeUISliderButton_Wrapper warpLowButton;
        
        public ScreenSafeUISlideTab_Wrapper timeQuadrantTab;
        
        public UnityEngine.GUIStyle screenTextStyle;
        
        public float textDuration;
        
        public int current_rate_index;
        
        public TimeWarp_Wrapper fetch;
        
        public TimeWarp.Modes WarpMode;
        
        public float CurrentRate;
        
        public int CurrentRateIndex;
        
        public float MaxPhysicsRate;
        
        public float deltaTime;
        
        public float fixedDeltaTime;
        
        public bool useGUILayout;
        
        public bool enabled;
        
        public Transform_Wrapper transform;
        
        public Rigidbody_Wrapper rigidbody;
        
        public Rigidbody2D_Wrapper rigidbody2D;
        
        public Camera_Wrapper camera;
        
        public Light_Wrapper light;
        
        public Animation_Wrapper animation;
        
        public ConstantForce_Wrapper constantForce;
        
        public Renderer_Wrapper renderer;
        
        public AudioSource_Wrapper audio;
        
        public GUIText_Wrapper guiText;
        
        public NetworkView_Wrapper networkView;
        
        public GUIElement_Wrapper guiElement;
        
        public GUITexture_Wrapper guiTexture;
        
        public Collider_Wrapper collider;
        
        public Collider2D_Wrapper collider2D;
        
        public HingeJoint_Wrapper hingeJoint;
        
        public ParticleEmitter_Wrapper particleEmitter;
        
        public ParticleSystem_Wrapper particleSystem;
        
        public GameObject_Wrapper gameObject;
        
        public bool active;
        
        public string tag;
        
        public string name;
        
        public UnityEngine.HideFlags hideFlags;
    }
}
