//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18444
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrappers {
    
    
    [System.SerializableAttribute()]
    public class PQuad_Wrapper {
        
        public int subdivision;
        
        public PQuadSphere_Wrapper sphereRoot;
        
        public PQuad[] subNodes;
        
        public PQuad_Wrapper root;
        
        public Quaternion_Wrapper planeRotation;
        
        public PQuad_Wrapper parent;
        
        public PQuad_Wrapper north;
        
        public bool northEdgeHadUpdate;
        
        public PQuad_Wrapper south;
        
        public bool southEdgeHadUpdate;
        
        public PQuad_Wrapper east;
        
        public bool eastEdgeHadUpdate;
        
        public PQuad_Wrapper west;
        
        public bool westEdgeHadUpdate;
        
        public bool isVisible;
        
        public bool isBuilt;
        
        public bool isQueuedForNormalUpdate;
        
        public Vector3_Wrapper positionPlanetRelative;
        
        public Vector3_Wrapper positionPlanePosition;
        
        public float scalePlanetRelative;
        
        public float scalePlaneRelative;
        
        public PQuad.EdgeState edgeState;
        
        public float cacheQuadSize;
        
        public float cacheQuadSizeDiv2;
        
        public int cacheVertCount;
        
        public UnityEngine.Vector3[] cacheVerts;
        
        public UnityEngine.Vector2[] cacheUVs;
        
        public UnityEngine.Vector3[] cacheNormals;
        
        public UnityEngine.Color[] cacheColors;
        
        public UnityEngine.Vector3[] vertNormals;
        
        public Matrix4x4_Wrapper upMatrix;
        
        public Matrix4x4_Wrapper quadMatrix;
        
        public bool isSubdivided;
        
        public UnityEngine.Vector3[] verts;
        
        public UnityEngine.Vector2[] uvs;
        
        public UnityEngine.Vector3[] triNormals;
        
        public bool useGUILayout;
        
        public bool enabled;
        
        public Transform_Wrapper transform;
        
        public Rigidbody_Wrapper rigidbody;
        
        public Rigidbody2D_Wrapper rigidbody2D;
        
        public Camera_Wrapper camera;
        
        public Light_Wrapper light;
        
        public Animation_Wrapper animation;
        
        public ConstantForce_Wrapper constantForce;
        
        public Renderer_Wrapper renderer;
        
        public AudioSource_Wrapper audio;
        
        public GUIText_Wrapper guiText;
        
        public NetworkView_Wrapper networkView;
        
        public GUIElement_Wrapper guiElement;
        
        public GUITexture_Wrapper guiTexture;
        
        public Collider_Wrapper collider;
        
        public Collider2D_Wrapper collider2D;
        
        public HingeJoint_Wrapper hingeJoint;
        
        public ParticleEmitter_Wrapper particleEmitter;
        
        public ParticleSystem_Wrapper particleSystem;
        
        public GameObject_Wrapper gameObject;
        
        public bool active;
        
        public string tag;
        
        public string name;
        
        public UnityEngine.HideFlags hideFlags;
    }
}
