//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34014
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrappers {
    
    
    [System.SerializableAttribute()]
    public class GameSettings_Wrapper {
        
        public string _SETTINGS_FILE_VERSION_wrapped;
        
        public bool _TUTORIALS_EDITOR_ENABLE_wrapped;
        
        public bool _TUTORIALS_FLIGHT_ENABLE_wrapped;
        
        public bool _VAB_USE_CLICK_PLACE_wrapped;
        
        public bool _VAB_USE_ANGLE_SNAP_wrapped;
        
        public bool _VAB_ANGLE_SNAP_INCLUDE_VERTICAL_wrapped;
        
        public float _VAB_CAMERA_ORBIT_SENS_wrapped;
        
        public float _VAB_CAMERA_ZOOM_SENS_wrapped;
        
        public float _FLT_CAMERA_ORBIT_SENS_wrapped;
        
        public float _FLT_CAMERA_ZOOM_SENS_wrapped;
        
        public float _FLT_CAMERA_WOBBLE_wrapped;
        
        public float _FLT_CAMERA_CHASE_SHARPNESS_wrapped;
        
        public bool _FLT_CAMERA_CHASE_USEVELOCITYVECTOR_wrapped;
        
        public bool _FLT_VESSEL_LABELS_wrapped;
        
        public float _SPACENAV_CAMERA_SENS_ROT_wrapped;
        
        public float _SPACENAV_CAMERA_SENS_LIN_wrapped;
        
        public float _SPACENAV_CAMERA_SHARPNESS_LIN_wrapped;
        
        public float _SPACENAV_CAMERA_SHARPNESS_ROT_wrapped;
        
        public bool _SIMULATE_IN_BACKGROUND_wrapped;
        
        public float _PHYSICS_FRAME_DT_LIMIT_wrapped;
        
        public int _MAX_VESSELS_BUDGET_wrapped;
        
        public int _CONIC_PATCH_DRAW_MODE_wrapped;
        
        public int _CONIC_PATCH_LIMIT_wrapped;
        
        public bool _SHOW_PWARP_WARNING_wrapped;
        
        public bool _EVA_ROTATE_ON_MOVE_wrapped;
        
        public bool _USE_STAGING_CONTROLS_ON_DOCKING_wrapped;
        
        public float _SPACENAV_FLIGHT_SENS_ROT_wrapped;
        
        public float _SPACENAV_FLIGHT_SENS_LIN_wrapped;
        
        public bool _KERBIN_TIME_wrapped;
        
        public bool _CALL_HOME_wrapped;
        
        public bool _DONT_SEND_IP_wrapped;
        
        public bool _SEND_PROGRESS_DATA_wrapped;
        
        public bool _CHECK_FOR_UPDATES_wrapped;
        
        public bool _VERBOSE_DEBUG_LOG_wrapped;
        
        public bool _SHOW_CONSOLE_ON_ERROR_wrapped;
        
        public float _AUTOSAVE_INTERVAL_wrapped;
        
        public float _AUTOSAVE_SHORT_INTERVAL_wrapped;
        
        public bool _SHOW_SPACE_CENTER_CREW_wrapped;
        
        public int _UI_SIZE_wrapped;
        
        public float _SHIP_VOLUME_wrapped;
        
        public float _AMBIENCE_VOLUME_wrapped;
        
        public float _MUSIC_VOLUME_wrapped;
        
        public float _UI_VOLUME_wrapped;
        
        public float _VOICE_VOLUME_wrapped;
        
        public bool _SOUND_NORMALIZER_ENABLED_wrapped;
        
        public float _SOUND_NORMALIZER_THRESHOLD_wrapped;
        
        public float _SOUND_NORMALIZER_RESPONSIVENESS_wrapped;
        
        public int _SOUND_NORMALIZER_SKIPSAMPLES_wrapped;
        
        public int _SCREEN_RESOLUTION_WIDTH_wrapped;
        
        public int _SCREEN_RESOLUTION_HEIGHT_wrapped;
        
        public bool _FULLSCREEN_wrapped;
        
        public int _QUALITY_PRESET_wrapped;
        
        public int _ANTI_ALIASING_wrapped;
        
        public int _TEXTURE_QUALITY_wrapped;
        
        public int _SYNC_VBL_wrapped;
        
        public int _LIGHT_QUALITY_wrapped;
        
        public int _SHADOWS_QUALITY_wrapped;
        
        public int _FRAMERATE_LIMIT_wrapped;
        
        public bool _FALLBACK_PART_SHADERS_wrapped;
        
        public bool _PLANET_FORCE_SHADER_MODEL_2_0_wrapped;
        
        public bool _PLANET_SCATTER_wrapped;
        
        public float _PLANET_SCATTER_FACTOR_wrapped;
        
        public int _AERO_FX_QUALITY_wrapped;
        
        public float _INPUT_KEYBOARD_SENSIVITITY_wrapped;
        
        public KeyBinding_Wrapper _PITCH_DOWN_wrapped;
        
        public KeyBinding_Wrapper _PITCH_UP_wrapped;
        
        public KeyBinding_Wrapper _YAW_LEFT_wrapped;
        
        public KeyBinding_Wrapper _YAW_RIGHT_wrapped;
        
        public KeyBinding_Wrapper _ROLL_LEFT_wrapped;
        
        public KeyBinding_Wrapper _ROLL_RIGHT_wrapped;
        
        public KeyBinding_Wrapper _THROTTLE_UP_wrapped;
        
        public KeyBinding_Wrapper _THROTTLE_DOWN_wrapped;
        
        public KeyBinding_Wrapper _SAS_HOLD_wrapped;
        
        public KeyBinding_Wrapper _SAS_TOGGLE_wrapped;
        
        public KeyBinding_Wrapper _LAUNCH_STAGES_wrapped;
        
        public KeyBinding_Wrapper _CAMERA_MODE_wrapped;
        
        public KeyBinding_Wrapper _CAMERA_NEXT_wrapped;
        
        public KeyBinding_Wrapper _PAUSE_wrapped;
        
        public KeyBinding_Wrapper _PRECISION_CTRL_wrapped;
        
        public KeyBinding_Wrapper _ZOOM_IN_wrapped;
        
        public KeyBinding_Wrapper _ZOOM_OUT_wrapped;
        
        public KeyBinding_Wrapper _SCROLL_VIEW_UP_wrapped;
        
        public KeyBinding_Wrapper _SCROLL_VIEW_DOWN_wrapped;
        
        public KeyBinding_Wrapper _SCROLL_ICONS_UP_wrapped;
        
        public KeyBinding_Wrapper _SCROLL_ICONS_DOWN_wrapped;
        
        public KeyBinding_Wrapper _CAMERA_ORBIT_UP_wrapped;
        
        public KeyBinding_Wrapper _CAMERA_ORBIT_DOWN_wrapped;
        
        public KeyBinding_Wrapper _CAMERA_ORBIT_LEFT_wrapped;
        
        public KeyBinding_Wrapper _CAMERA_ORBIT_RIGHT_wrapped;
        
        public KeyBinding_Wrapper _CAMERA_RESET_wrapped;
        
        public KeyBinding_Wrapper _TIME_WARP_INCREASE_wrapped;
        
        public KeyBinding_Wrapper _TIME_WARP_DECREASE_wrapped;
        
        public KeyBinding_Wrapper _MAP_VIEW_TOGGLE_wrapped;
        
        public KeyBinding_Wrapper _UIMODE_STAGING_wrapped;
        
        public KeyBinding_Wrapper _UIMODE_DOCKING_wrapped;
        
        public KeyBinding_Wrapper _TRANSLATE_UP_wrapped;
        
        public KeyBinding_Wrapper _TRANSLATE_DOWN_wrapped;
        
        public KeyBinding_Wrapper _TRANSLATE_LEFT_wrapped;
        
        public KeyBinding_Wrapper _TRANSLATE_RIGHT_wrapped;
        
        public KeyBinding_Wrapper _TRANSLATE_FWD_wrapped;
        
        public KeyBinding_Wrapper _TRANSLATE_BACK_wrapped;
        
        public KeyBinding_Wrapper _RCS_TOGGLE_wrapped;
        
        public KeyBinding_Wrapper _FOCUS_NEXT_VESSEL_wrapped;
        
        public KeyBinding_Wrapper _FOCUS_PREV_VESSEL_wrapped;
        
        public KeyBinding_Wrapper _TOGGLE_UI_wrapped;
        
        public KeyBinding_Wrapper _TOGGLE_STATUS_SCREEN_wrapped;
        
        public KeyBinding_Wrapper _TAKE_SCREENSHOT_wrapped;
        
        public KeyBinding_Wrapper _TOGGLE_LABELS_wrapped;
        
        public KeyBinding_Wrapper _QUICKSAVE_wrapped;
        
        public KeyBinding_Wrapper _QUICKLOAD_wrapped;
        
        public KeyBinding_Wrapper _THROTTLE_CUTOFF_wrapped;
        
        public KeyBinding_Wrapper _LANDING_GEAR_wrapped;
        
        public KeyBinding_Wrapper _HEADLIGHT_TOGGLE_wrapped;
        
        public KeyBinding_Wrapper _BRAKES_wrapped;
        
        public KeyBinding_Wrapper _TOGGLE_SPACENAV_FLIGHT_CONTROL_wrapped;
        
        public KeyBinding_Wrapper _TOGGLE_SPACENAV_ROLL_LOCK_wrapped;
        
        public KeyBinding_Wrapper _EVA_forward_wrapped;
        
        public KeyBinding_Wrapper _EVA_back_wrapped;
        
        public KeyBinding_Wrapper _EVA_left_wrapped;
        
        public KeyBinding_Wrapper _EVA_right_wrapped;
        
        public KeyBinding_Wrapper _EVA_yaw_left_wrapped;
        
        public KeyBinding_Wrapper _EVA_yaw_right_wrapped;
        
        public KeyBinding_Wrapper _EVA_Pack_forward_wrapped;
        
        public KeyBinding_Wrapper _EVA_Pack_back_wrapped;
        
        public KeyBinding_Wrapper _EVA_Pack_left_wrapped;
        
        public KeyBinding_Wrapper _EVA_Pack_right_wrapped;
        
        public KeyBinding_Wrapper _EVA_Pack_up_wrapped;
        
        public KeyBinding_Wrapper _EVA_Pack_down_wrapped;
        
        public KeyBinding_Wrapper _EVA_Jump_wrapped;
        
        public KeyBinding_Wrapper _EVA_Run_wrapped;
        
        public KeyBinding_Wrapper _EVA_ToggleMovementMode_wrapped;
        
        public KeyBinding_Wrapper _EVA_TogglePack_wrapped;
        
        public KeyBinding_Wrapper _EVA_Use_wrapped;
        
        public KeyBinding_Wrapper _EVA_Orient_wrapped;
        
        public KeyBinding_Wrapper _EVA_Lights_wrapped;
        
        public KeyBinding_Wrapper _Docking_pitchUp_wrapped;
        
        public KeyBinding_Wrapper _Docking_pitchDown_wrapped;
        
        public KeyBinding_Wrapper _Docking_yawLeft_wrapped;
        
        public KeyBinding_Wrapper _Docking_yawRight_wrapped;
        
        public KeyBinding_Wrapper _Docking_rollLeft_wrapped;
        
        public KeyBinding_Wrapper _Docking_rollRight_wrapped;
        
        public KeyBinding_Wrapper _Docking_toggleRotLin_wrapped;
        
        public KeyBinding_Wrapper _Docking_staging_wrapped;
        
        public KeyBinding_Wrapper _Docking_linFwd_wrapped;
        
        public KeyBinding_Wrapper _Docking_linBack_wrapped;
        
        public KeyBinding_Wrapper _Docking_linLeft_wrapped;
        
        public KeyBinding_Wrapper _Docking_linRight_wrapped;
        
        public KeyBinding_Wrapper _Docking_linUp_wrapped;
        
        public KeyBinding_Wrapper _Docking_linDown_wrapped;
        
        public KeyBinding_Wrapper _Docking_throttleUp_wrapped;
        
        public KeyBinding_Wrapper _Docking_throttleDown_wrapped;
        
        public KeyBinding_Wrapper _Editor_pitchUp_wrapped;
        
        public KeyBinding_Wrapper _Editor_pitchDown_wrapped;
        
        public KeyBinding_Wrapper _Editor_yawLeft_wrapped;
        
        public KeyBinding_Wrapper _Editor_yawRight_wrapped;
        
        public KeyBinding_Wrapper _Editor_rollLeft_wrapped;
        
        public KeyBinding_Wrapper _Editor_rollRight_wrapped;
        
        public KeyBinding_Wrapper _Editor_resetRotation_wrapped;
        
        public AxisBinding_Wrapper _AXIS_PITCH_wrapped;
        
        public AxisBinding_Wrapper _AXIS_ROLL_wrapped;
        
        public AxisBinding_Wrapper _AXIS_YAW_wrapped;
        
        public AxisBinding_Wrapper _AXIS_THROTTLE_wrapped;
        
        public AxisBinding_Wrapper _AXIS_THROTTLE_INC_wrapped;
        
        public AxisBinding_Wrapper _AXIS_CAMERA_HDG_wrapped;
        
        public AxisBinding_Wrapper _AXIS_CAMERA_PITCH_wrapped;
        
        public AxisBinding_Wrapper _AXIS_TRANSLATE_X_wrapped;
        
        public AxisBinding_Wrapper _AXIS_TRANSLATE_Y_wrapped;
        
        public AxisBinding_Wrapper _AXIS_TRANSLATE_Z_wrapped;
        
        public AxisBinding_Wrapper _AXIS_WHEEL_STEER_wrapped;
        
        public KeyBinding_Wrapper _WHEEL_STEER_LEFT_wrapped;
        
        public KeyBinding_Wrapper _WHEEL_STEER_RIGHT_wrapped;
        
        public AxisBinding_Wrapper _AXIS_WHEEL_THROTTLE_wrapped;
        
        public KeyBinding_Wrapper _WHEEL_THROTTLE_DOWN_wrapped;
        
        public KeyBinding_Wrapper _WHEEL_THROTTLE_UP_wrapped;
        
        public AxisBinding_Wrapper _axis_EVA_translate_x_wrapped;
        
        public AxisBinding_Wrapper _axis_EVA_translate_y_wrapped;
        
        public AxisBinding_Wrapper _axis_EVA_translate_z_wrapped;
        
        public AxisBinding_Wrapper _axis_EVA_pitch_wrapped;
        
        public AxisBinding_Wrapper _axis_EVA_yaw_wrapped;
        
        public AxisBinding_Wrapper _axis_EVA_roll_wrapped;
        
        public AxisBinding_Wrapper _axis_Docking_translate_x_wrapped;
        
        public AxisBinding_Wrapper _axis_Docking_translate_y_wrapped;
        
        public AxisBinding_Wrapper _axis_Docking_translate_z_wrapped;
        
        public AxisBinding_Wrapper _axis_Docking_pitch_wrapped;
        
        public AxisBinding_Wrapper _axis_Docking_yaw_wrapped;
        
        public AxisBinding_Wrapper _axis_Docking_roll_wrapped;
        
        public AxisBinding_Wrapper _axis_Docking_Throttle_wrapped;
        
        public AxisBinding_Wrapper _axis_Docking_Throttle_inc_wrapped;
        
        public AxisBinding_Wrapper _AXIS_MOUSEWHEEL_wrapped;
        
        public KeyBinding_Wrapper _MODIFIER_KEY_wrapped;
        
        public KeyBinding_Wrapper _AbortActionGroup_wrapped;
        
        public KeyBinding_Wrapper _CustomActionGroup1_wrapped;
        
        public KeyBinding_Wrapper _CustomActionGroup2_wrapped;
        
        public KeyBinding_Wrapper _CustomActionGroup3_wrapped;
        
        public KeyBinding_Wrapper _CustomActionGroup4_wrapped;
        
        public KeyBinding_Wrapper _CustomActionGroup5_wrapped;
        
        public KeyBinding_Wrapper _CustomActionGroup6_wrapped;
        
        public KeyBinding_Wrapper _CustomActionGroup7_wrapped;
        
        public KeyBinding_Wrapper _CustomActionGroup8_wrapped;
        
        public KeyBinding_Wrapper _CustomActionGroup9_wrapped;
        
        public KeyBinding_Wrapper _CustomActionGroup10_wrapped;
        
        public bool _dontShowLauncher_wrapped;
        
        private bool _useguilayout;
        
        private bool _enabled;
        
        private Transform_Wrapper _transform;
        
        private Rigidbody_Wrapper _rigidbody;
        
        private Rigidbody2D_Wrapper _rigidbody2d;
        
        private Camera_Wrapper _camera;
        
        private Light_Wrapper _light;
        
        private Animation_Wrapper _animation;
        
        private ConstantForce_Wrapper _constantforce;
        
        private Renderer_Wrapper _renderer;
        
        private AudioSource_Wrapper _audio;
        
        private GUIText_Wrapper _guitext;
        
        private NetworkView_Wrapper _networkview;
        
        private GUIElement_Wrapper _guielement;
        
        private GUITexture_Wrapper _guitexture;
        
        private Collider_Wrapper _collider;
        
        private Collider2D_Wrapper _collider2d;
        
        private HingeJoint_Wrapper _hingejoint;
        
        private ParticleEmitter_Wrapper _particleemitter;
        
        private ParticleSystem_Wrapper _particlesystem;
        
        private GameObject_Wrapper _gameobject;
        
        private bool _active;
        
        private string _tag;
        
        private string _name;
        
        private UnityEngine.HideFlags _hideflags;
        
        public bool useGUILayout {
            get {
                return _useguilayout;
            }
            set {
                _useguilayout = value;
            }
        }
        
        public bool enabled {
            get {
                return _enabled;
            }
            set {
                _enabled = value;
            }
        }
        
        public Transform_Wrapper transform {
            get {
                return this._transform;
            }
            set {
                this._transform = value;
            }
        }
        
        public Rigidbody_Wrapper rigidbody {
            get {
                return this._rigidbody;
            }
            set {
                this._rigidbody = value;
            }
        }
        
        public Rigidbody2D_Wrapper rigidbody2D {
            get {
                return this._rigidbody2d;
            }
            set {
                this._rigidbody2d = value;
            }
        }
        
        public Camera_Wrapper camera {
            get {
                return this._camera;
            }
            set {
                this._camera = value;
            }
        }
        
        public Light_Wrapper light {
            get {
                return this._light;
            }
            set {
                this._light = value;
            }
        }
        
        public Animation_Wrapper animation {
            get {
                return this._animation;
            }
            set {
                this._animation = value;
            }
        }
        
        public ConstantForce_Wrapper constantForce {
            get {
                return this._constantforce;
            }
            set {
                this._constantforce = value;
            }
        }
        
        public Renderer_Wrapper renderer {
            get {
                return this._renderer;
            }
            set {
                this._renderer = value;
            }
        }
        
        public AudioSource_Wrapper audio {
            get {
                return this._audio;
            }
            set {
                this._audio = value;
            }
        }
        
        public GUIText_Wrapper guiText {
            get {
                return this._guitext;
            }
            set {
                this._guitext = value;
            }
        }
        
        public NetworkView_Wrapper networkView {
            get {
                return this._networkview;
            }
            set {
                this._networkview = value;
            }
        }
        
        public GUIElement_Wrapper guiElement {
            get {
                return this._guielement;
            }
            set {
                this._guielement = value;
            }
        }
        
        public GUITexture_Wrapper guiTexture {
            get {
                return this._guitexture;
            }
            set {
                this._guitexture = value;
            }
        }
        
        public Collider_Wrapper collider {
            get {
                return this._collider;
            }
            set {
                this._collider = value;
            }
        }
        
        public Collider2D_Wrapper collider2D {
            get {
                return this._collider2d;
            }
            set {
                this._collider2d = value;
            }
        }
        
        public HingeJoint_Wrapper hingeJoint {
            get {
                return this._hingejoint;
            }
            set {
                this._hingejoint = value;
            }
        }
        
        public ParticleEmitter_Wrapper particleEmitter {
            get {
                return this._particleemitter;
            }
            set {
                this._particleemitter = value;
            }
        }
        
        public ParticleSystem_Wrapper particleSystem {
            get {
                return this._particlesystem;
            }
            set {
                this._particlesystem = value;
            }
        }
        
        public GameObject_Wrapper gameObject {
            get {
                return this._gameobject;
            }
            set {
                this._gameobject = value;
            }
        }
        
        public bool active {
            get {
                return _active;
            }
            set {
                _active = value;
            }
        }
        
        public string tag {
            get {
                return _tag;
            }
            set {
                _tag = value;
            }
        }
        
        public string name {
            get {
                return _name;
            }
            set {
                _name = value;
            }
        }
        
        public UnityEngine.HideFlags hideFlags {
            get {
                return _hideflags;
            }
            set {
                _hideflags = value;
            }
        }
    }
}
