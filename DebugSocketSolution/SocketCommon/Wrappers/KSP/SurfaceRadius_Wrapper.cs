//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18444
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrappers {
    
    
    [System.SerializableAttribute()]
    public class SurfaceRadius_Wrapper {
        
        public Planet_Wrapper planet;
        
        public float shorelineThreshold;
        
        public int seed;
        
        public Vector3_Wrapper offset;
        
        public float smoothness;
        
        public float deformity;
        
        public float continentalDeformity;
        
        public int noisePasses;
        
        public float noiseFalloff;
        
        public float mesaVsPlainsBias;
        
        public float plainsVsMountainSmoothness;
        
        public float plainsVsMountainThreshold;
        
        public float plainSmoothness;
        
        public float waterLevel;
        
        public float waterThreshold;
        
        public float shiftBalance;
        
        public Texture2D_Wrapper planetHeightMap;
        
        public float planetHeightMapOffset;
        
        public Select_Wrapper terrainHeightMap;
        
        public Transform_Wrapper tgt;
        
        public OceanRadius_Wrapper oceanRef;
        
        public float refreshInterval;
        
        public int refreshSteps;
        
        public float refreshSensitivity;
        
        public float maxRadius;
        
        public float minRadius;
        
        public float horizonReach;
        
        public float fadeStart;
        
        public float fadeEnd;
        
        public float minSurfaceDist;
        
        public float maxSurfaceDist;
        
        public bool forceRebuild;
        
        public bool manualUpdateMode;
        
        public bool ready;
        
        public GameObject_Wrapper lookAhead;
        
        public bool useGUILayout;
        
        public bool enabled;
        
        public Transform_Wrapper transform;
        
        public Rigidbody_Wrapper rigidbody;
        
        public Rigidbody2D_Wrapper rigidbody2D;
        
        public Camera_Wrapper camera;
        
        public Light_Wrapper light;
        
        public Animation_Wrapper animation;
        
        public ConstantForce_Wrapper constantForce;
        
        public Renderer_Wrapper renderer;
        
        public AudioSource_Wrapper audio;
        
        public GUIText_Wrapper guiText;
        
        public NetworkView_Wrapper networkView;
        
        public GUIElement_Wrapper guiElement;
        
        public GUITexture_Wrapper guiTexture;
        
        public Collider_Wrapper collider;
        
        public Collider2D_Wrapper collider2D;
        
        public HingeJoint_Wrapper hingeJoint;
        
        public ParticleEmitter_Wrapper particleEmitter;
        
        public ParticleSystem_Wrapper particleSystem;
        
        public GameObject_Wrapper gameObject;
        
        public bool active;
        
        public string tag;
        
        public string name;
        
        public UnityEngine.HideFlags hideFlags;
    }
}
