//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18444
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrappers {
    
    
    [System.SerializableAttribute()]
    public class PQuadSphere_Wrapper {
        
        public int seed;
        
        public float radius;
        
        public bool defaultInspector;
        
        public bool surfaceHeightMap;
        
        public bool surfaceNoise;
        
        public bool surfaceDefineCoastline;
        
        public bool surfaceVertexColor;
        
        public bool surfaceVertexColorBlend;
        
        public Material_Wrapper surfaceMaterial;
        
        public Material_Wrapper surfaceFallbackMaterial;
        
        public float maxFrameTime;
        
        public bool isSubdivisionEnabled;
        
        public int minLevel;
        
        public int maxLevel;
        
        public float parameterScaleFactor;
        
        public Texture2D_Wrapper heightMap;
        
        public float heightMapDeformity;
        
        public Texture2D_Wrapper vertexColorMap;
        
        public Color_Wrapper vertexColorDefault;
        
        public float vertexColorBlend;
        
        public float noiseDeformity;
        
        public float smoothness;
        
        public int noisePasses;
        
        public float noiseFalloff;
        
        public float mesaVsPlainsBias;
        
        public float plainsVsMountainSmoothness;
        
        public float plainsVsMountainThreshold;
        
        public float plainSmoothness;
        
        public float waterThreshold;
        
        public float waterStep;
        
        public Transform_Wrapper target;
        
        public Transform_Wrapper secondaryTarget;
        
        public bool createSphereCollider;
        
        public float sphereColliderRadiusOffset;
        
        public Vector3d_Wrapper relativeTargetPosition;
        
        public float targetDistance;
        
        public float targetAltitude;
        
        public Vector3d_Wrapper relative2ndTargetPosition;
        
        public float secondaryTargetDistance;
        
        public float secondaryTargetAltitude;
        
        public float minDetailDistance;
        
        public float subdivisionThreshold;
        
        public float collapseThreshold;
        
        public float fadeStartAltitude;
        
        public float fadeEndAltitude;
        
        public float horizonFadeStart;
        
        public float horizonFadeEnd;
        
        public float masterOpacity;
        
        public System.Collections.Generic.List<PQuad> normalUpdateList;
        
        public double sx;
        
        public double sy;
        
        public double u;
        
        public double v;
        
        public double uMin;
        
        public double uMax;
        
        public double vMin;
        
        public double vMax;
        
        public double pxh1;
        
        public double pxh2;
        
        public double pxh3;
        
        public double pxh4;
        
        public double pixelHeight;
        
        public double latitude;
        
        public double longitude;
        
        public double uDiff;
        
        public double vDiff;
        
        public System.Collections.Generic.List<PQSMod> functions;
        
        public bool requiresNormalUpdates;
        
        public bool requiresColorChannel;
        
        public float circumference;
        
        public float visibleRadius;
        
        public bool quadAutoBuild;
        
        public float maxFrameEnd;
        
        public int quadCount;
        
        public bool useGUILayout;
        
        public bool enabled;
        
        public Transform_Wrapper transform;
        
        public Rigidbody_Wrapper rigidbody;
        
        public Rigidbody2D_Wrapper rigidbody2D;
        
        public Camera_Wrapper camera;
        
        public Light_Wrapper light;
        
        public Animation_Wrapper animation;
        
        public ConstantForce_Wrapper constantForce;
        
        public Renderer_Wrapper renderer;
        
        public AudioSource_Wrapper audio;
        
        public GUIText_Wrapper guiText;
        
        public NetworkView_Wrapper networkView;
        
        public GUIElement_Wrapper guiElement;
        
        public GUITexture_Wrapper guiTexture;
        
        public Collider_Wrapper collider;
        
        public Collider2D_Wrapper collider2D;
        
        public HingeJoint_Wrapper hingeJoint;
        
        public ParticleEmitter_Wrapper particleEmitter;
        
        public ParticleSystem_Wrapper particleSystem;
        
        public GameObject_Wrapper gameObject;
        
        public bool active;
        
        public string tag;
        
        public string name;
        
        public UnityEngine.HideFlags hideFlags;
    }
}
