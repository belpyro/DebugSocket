//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18444
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrappers {
    
    
    [System.SerializableAttribute()]
    [SocketCommon.Attributes.InstanceNameAttribute("fetch")]
    public class EditorLogic_Wrapper {
        
        public EditorLogic.EditorScreen editorScreen;
        
        public Camera_Wrapper editorCamera;
        
        public string startPodId;
        
        public Vector3_Wrapper initialPodPosition;
        
        public Vector3_Wrapper initialPodRotation;
        
        public Quaternion_Wrapper partRotation;
        
        public float dragSharpness;
        
        public float srfAttachAngleSnap;
        
        public Bounds_Wrapper editorBounds;
        
        public bool debugFlight;
        
        public EditorLogic.EditorMode editorType;
        
        public int sceneToLoad;
        
        public GameObject_Wrapper attachNodePrefab;
        
        public AudioClip_Wrapper attachClip;
        
        public AudioClip_Wrapper deletePartClip;
        
        public AudioClip_Wrapper partGrabClip;
        
        public AudioClip_Wrapper partReleaseClip;
        
        public AudioClip_Wrapper cannotPlaceClip;
        
        public string launchSiteName;
        
        public Vector3_Wrapper selPartGrabOffset;
        
        public Vector3_Wrapper dragPlaneCenter;
        
        public ShipConstruct ship;
        
        public EditorLogic.EditorState state;
        
        public bool mouseGrab;
        
        public ScreenSafeTextField_Wrapper shipNameField;
        
        public ScreenSafeTextArea_Wrapper shipDescriptionField;
        
        public FlagBrowserButton_Wrapper flagBrowserButton;
        
        public CMAssignmentDialog_Wrapper CrewAssignmentDialog;
        
        public UnityEngine.Collider[] modalAreas;
        
        public bool allowSrfAttachment;
        
        public bool allowNodeAttachment;
        
        public UnityEngine.GUISkin shipBrowserSkin;
        
        public Texture2D_Wrapper shipFileImage;
        
        public int symmetryMode;
        
        public Part_Wrapper startPod;
        
        public EditorLogic_Wrapper fetch;
        
        public bool editorLocked;
        
        public bool softLock;
        
        public string FlagURL;
        
        public Quaternion_Wrapper VesselRotation;
        
        public Quaternion_Wrapper PartRotation;
        
        public Part_Wrapper PartSelected;
        
        public Part_Wrapper SelectedPart;
        
        public int LayerMask;
        
        public EditorLogic.EditorState State;
        
        public Texture2D_Wrapper ShipFileImage;
        
        public bool mouseOverGUI;
        
        public System.Collections.Generic.List<Part> SortedShipList;
        
        public bool useGUILayout;
        
        public bool enabled;
        
        public Transform_Wrapper transform;
        
        public Rigidbody_Wrapper rigidbody;
        
        public Rigidbody2D_Wrapper rigidbody2D;
        
        public Camera_Wrapper camera;
        
        public Light_Wrapper light;
        
        public Animation_Wrapper animation;
        
        public ConstantForce_Wrapper constantForce;
        
        public Renderer_Wrapper renderer;
        
        public AudioSource_Wrapper audio;
        
        public GUIText_Wrapper guiText;
        
        public NetworkView_Wrapper networkView;
        
        public GUIElement_Wrapper guiElement;
        
        public GUITexture_Wrapper guiTexture;
        
        public Collider_Wrapper collider;
        
        public Collider2D_Wrapper collider2D;
        
        public HingeJoint_Wrapper hingeJoint;
        
        public ParticleEmitter_Wrapper particleEmitter;
        
        public ParticleSystem_Wrapper particleSystem;
        
        public GameObject_Wrapper gameObject;
        
        public bool active;
        
        public string tag;
        
        public string name;
        
        public UnityEngine.HideFlags hideFlags;
    }
}
