//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34014
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrappers {
    
    
    [System.SerializableAttribute()]
    public class DetailPrototype_Wrapper {
        
        private GameObject_Wrapper _prototype;
        
        private Texture2D_Wrapper _prototypetexture;
        
        private float _minwidth;
        
        private float _maxwidth;
        
        private float _minheight;
        
        private float _maxheight;
        
        private float _noisespread;
        
        private float _bendfactor;
        
        private Color_Wrapper _healthycolor;
        
        private Color_Wrapper _drycolor;
        
        private UnityEngine.DetailRenderMode _rendermode;
        
        private bool _useprototypemesh;
        
        public GameObject_Wrapper prototype {
            get {
                return this._prototype;
            }
            set {
                this._prototype = value;
            }
        }
        
        public Texture2D_Wrapper prototypeTexture {
            get {
                return this._prototypetexture;
            }
            set {
                this._prototypetexture = value;
            }
        }
        
        public float minWidth {
            get {
                return _minwidth;
            }
            set {
                _minwidth = value;
            }
        }
        
        public float maxWidth {
            get {
                return _maxwidth;
            }
            set {
                _maxwidth = value;
            }
        }
        
        public float minHeight {
            get {
                return _minheight;
            }
            set {
                _minheight = value;
            }
        }
        
        public float maxHeight {
            get {
                return _maxheight;
            }
            set {
                _maxheight = value;
            }
        }
        
        public float noiseSpread {
            get {
                return _noisespread;
            }
            set {
                _noisespread = value;
            }
        }
        
        public float bendFactor {
            get {
                return _bendfactor;
            }
            set {
                _bendfactor = value;
            }
        }
        
        public Color_Wrapper healthyColor {
            get {
                return this._healthycolor;
            }
            set {
                this._healthycolor = value;
            }
        }
        
        public Color_Wrapper dryColor {
            get {
                return this._drycolor;
            }
            set {
                this._drycolor = value;
            }
        }
        
        public UnityEngine.DetailRenderMode renderMode {
            get {
                return _rendermode;
            }
            set {
                _rendermode = value;
            }
        }
        
        public bool usePrototypeMesh {
            get {
                return _useprototypemesh;
            }
            set {
                _useprototypemesh = value;
            }
        }
    }
}
