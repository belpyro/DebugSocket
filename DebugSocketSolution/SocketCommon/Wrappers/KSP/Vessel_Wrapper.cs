//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18444
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

using SocketCommon.Attributes;

namespace Wrappers {
    
    
    [System.SerializableAttribute()]
    [UniqId("id")]
    public class Vessel_Wrapper {
        
        public System.Guid id;
        
        public string vesselName;
        
        public System.Collections.Generic.List<Part> parts;
        
        public Part_Wrapper rootPart;
        
        public uint referenceTransformId;
        
        public OrbitDriver_Wrapper orbitDriver;
        
        public PatchedConicSolver_Wrapper patchedConicSolver;
        
        public PatchedConicRenderer_Wrapper patchedConicRenderer;
        
        public OrbitTargeter_Wrapper orbitTargeter;
        
        public FlightCtrlState_Wrapper ctrlState;
        
        public FlightIntegrator_Wrapper flightIntegrator;
        
        public int currentStage;
        
        public Quaternion_Wrapper srfRelRotation;
        
        public double longitude;
        
        public double latitude;
        
        public double altitude;
        
        public ProtoVessel_Wrapper protoVessel;
        
        public bool loaded;
        
        public Vessel.State state;
        
        public bool packed;
        
        public bool Landed;
        
        public bool Splashed;
        
        public string landedAt;
        
        public Callback OnJustAboutToBeDestroyed;
        
        public Vessel.Situations situation;
        
        public double missionTime;
        
        public double launchTime;
        
        public Vector3d_Wrapper obt_velocity;
        
        public Vector3d_Wrapper srf_velocity;
        
        public Vector3_Wrapper rb_velocity;
        
        public double obt_speed;
        
        public Vector3d_Wrapper acceleration;
        
        public Vector3d_Wrapper perturbation;
        
        public double specificAcceleration;
        
        public Vector3d_Wrapper upAxis;
        
        public Vector3_Wrapper CoM;
        
        public Vector3_Wrapper MOI;
        
        public Vector3_Wrapper angularVelocity;
        
        public Vector3_Wrapper angularMomentum;
        
        public double geeForce;
        
        public double geeForce_immediate;
        
        public double verticalSpeed;
        
        public double horizontalSrfSpeed;
        
        public double srfSpeed;
        
        public double staticPressure;
        
        public double atmDensity;
        
        public VesselType vesselType;
        
        public VesselSAS vesselSAS;
        
        public ConfigNode flightPlanNode;
        
        public ITargetable targetObject;
        
        public FlightInputCallback OnFlyByWire;
        
        public float distancePackThreshold;
        
        public float distanceUnpackThreshold;
        
        public float distanceLandedPackThreshold;
        
        public float distanceLandedUnpackThreshold;
        
        public float heightFromTerrain;
        
        public float heightFromSurface;
        
        public double terrainAltitude;
        
        public double pqsAltitude;
        
        public Vector3_Wrapper terrainNormal;
        
        public Transform_Wrapper vesselTransform;
        
        public Vector3_Wrapper localCoM;
        
        public float loadDistance;
        
        public float unloadDistance;
        
        public Part_Wrapper Item;
        
        public System.Collections.Generic.List<Part> Parts;
        
        public Transform_Wrapper ReferenceTransform;
        
        public Orbit orbit;
        
        public CelestialBody_Wrapper mainBody;
        
        public bool LandedOrSplashed;
        
        public bool HoldPhysics;
        
        public bool isCommandable;
        
        public bool isPersistent;
        
        public bool isActiveVessel;
        
        public bool IsRecoverable;
        
        public Vector3_Wrapper CurrentCoM;
        
        public bool isEVA;
        
        public VesselSAS VesselSAS;
        
        public bool IsControllable;
        
        public bool PatchedConicsAttached;
        
        public ActionGroupList ActionGroups;
        
        public DiscoveryInfo DiscoveryInfo;
        
        public bool useGUILayout;
        
        public bool enabled;
        
        public Transform_Wrapper transform;
        
        public Rigidbody_Wrapper rigidbody;
        
        public Rigidbody2D_Wrapper rigidbody2D;
        
        public Camera_Wrapper camera;
        
        public Light_Wrapper light;
        
        public Animation_Wrapper animation;
        
        public ConstantForce_Wrapper constantForce;
        
        public Renderer_Wrapper renderer;
        
        public AudioSource_Wrapper audio;
        
        public GUIText_Wrapper guiText;
        
        public NetworkView_Wrapper networkView;
        
        public GUIElement_Wrapper guiElement;
        
        public GUITexture_Wrapper guiTexture;
        
        public Collider_Wrapper collider;
        
        public Collider2D_Wrapper collider2D;
        
        public HingeJoint_Wrapper hingeJoint;
        
        public ParticleEmitter_Wrapper particleEmitter;
        
        public ParticleSystem_Wrapper particleSystem;
        
        public GameObject_Wrapper gameObject;
        
        public bool active;
        
        public string tag;
        
        public string name;
        
        public UnityEngine.HideFlags hideFlags;
    }
}
