//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18444
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrappers {
    
    
    [System.SerializableAttribute()]
    public class AtmosphereFromGround_Wrapper {
        
        public Transform_Wrapper mainCamera;
        
        public GameObject_Wrapper sunLight;
        
        public Vector3_Wrapper sunLightDirection;
        
        public Vector3_Wrapper cameraPos;
        
        public Color_Wrapper waveLength;
        
        public Color_Wrapper invWaveLength;
        
        public float cameraHeight;
        
        public float cameraHeight2;
        
        public float outerRadius;
        
        public float outerRadius2;
        
        public float innerRadius;
        
        public float innerRadius2;
        
        public float ESun;
        
        public float Kr;
        
        public float Km;
        
        public float KrESun;
        
        public float KmESun;
        
        public float Kr4PI;
        
        public float Km4PI;
        
        public float scale;
        
        public float scaleDepth;
        
        public float scaleOverScaleDepth;
        
        public float samples;
        
        public float g;
        
        public float g2;
        
        public CelestialBody_Wrapper planet;
        
        public bool doScale;
        
        public bool DEBUG_alwaysUpdateAll;
        
        public bool useGUILayout;
        
        public bool enabled;
        
        public Transform_Wrapper transform;
        
        public Rigidbody_Wrapper rigidbody;
        
        public Rigidbody2D_Wrapper rigidbody2D;
        
        public Camera_Wrapper camera;
        
        public Light_Wrapper light;
        
        public Animation_Wrapper animation;
        
        public ConstantForce_Wrapper constantForce;
        
        public Renderer_Wrapper renderer;
        
        public AudioSource_Wrapper audio;
        
        public GUIText_Wrapper guiText;
        
        public NetworkView_Wrapper networkView;
        
        public GUIElement_Wrapper guiElement;
        
        public GUITexture_Wrapper guiTexture;
        
        public Collider_Wrapper collider;
        
        public Collider2D_Wrapper collider2D;
        
        public HingeJoint_Wrapper hingeJoint;
        
        public ParticleEmitter_Wrapper particleEmitter;
        
        public ParticleSystem_Wrapper particleSystem;
        
        public GameObject_Wrapper gameObject;
        
        public bool active;
        
        public string tag;
        
        public string name;
        
        public UnityEngine.HideFlags hideFlags;
    }
}
