//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18444
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrappers {
    
    
    [System.SerializableAttribute()]
    public class ModuleDeployableSolarPanel_Wrapper {
        
        public Quaternion_Wrapper originalRotation;
        
        public Quaternion_Wrapper currentRotation;
        
        public bool runOnce;
        
        public string stateString;
        
        public float storedAnimationTime;
        
        public float storedAnimationSpeed;
        
        public string resourceName;
        
        public string animationName;
        
        public bool sunTracking;
        
        public bool retractable;
        
        public bool isBreakable;
        
        public float windResistance;
        
        public float impactResistance;
        
        public float panelMass;
        
        public float chargeRate;
        
        public float trackingSpeed;
        
        public string pivotName;
        
        public string raycastTransformName;
        
        public bool useAnimation;
        
        public float sunAOA;
        
        public float flowRate;
        
        public float _flowRate;
        
        public string status;
        
        public FloatCurve powerCurve;
        
        public float panelDrag;
        
        public ModuleDeployableSolarPanel.panelStates panelState;
        
        public RaycastHit_Wrapper hit;
        
        public string moduleName;
        
        public bool isEnabled;
        
        public ProtoPartModuleSnapshot_Wrapper snapshot;
        
        public string ClassName;
        
        public int ClassID;
        
        public BaseEventList_Wrapper Events;
        
        public BaseFieldList Fields;
        
        public string GUIName;
        
        public BaseActionList Actions;
        
        public Part_Wrapper part;
        
        public Vessel_Wrapper vessel;
        
        public bool useGUILayout;
        
        public bool enabled;
        
        public Transform_Wrapper transform;
        
        public Rigidbody_Wrapper rigidbody;
        
        public Rigidbody2D_Wrapper rigidbody2D;
        
        public Camera_Wrapper camera;
        
        public Light_Wrapper light;
        
        public Animation_Wrapper animation;
        
        public ConstantForce_Wrapper constantForce;
        
        public Renderer_Wrapper renderer;
        
        public AudioSource_Wrapper audio;
        
        public GUIText_Wrapper guiText;
        
        public NetworkView_Wrapper networkView;
        
        public GUIElement_Wrapper guiElement;
        
        public GUITexture_Wrapper guiTexture;
        
        public Collider_Wrapper collider;
        
        public Collider2D_Wrapper collider2D;
        
        public HingeJoint_Wrapper hingeJoint;
        
        public ParticleEmitter_Wrapper particleEmitter;
        
        public ParticleSystem_Wrapper particleSystem;
        
        public GameObject_Wrapper gameObject;
        
        public bool active;
        
        public string tag;
        
        public string name;
        
        public UnityEngine.HideFlags hideFlags;
    }
}
