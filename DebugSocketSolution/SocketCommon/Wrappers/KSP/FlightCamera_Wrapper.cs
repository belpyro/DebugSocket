//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18444
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wrappers {
    
    
    [System.SerializableAttribute()]
    [SocketCommon.Attributes.InstanceNameAttribute("fetch")]
    public class FlightCamera_Wrapper {
        
        public float minPitch;
        
        public float maxPitch;
        
        public float startDistance;
        
        public float maxDistance;
        
        public float minDistance;
        
        public float minHeightAtMaxDist;
        
        public float minHeightAtMinDist;
        
        public float minHeight;
        
        public float orbitSensitivity;
        
        public float zoomScaleFactor;
        
        public float sharpness;
        
        public float pivotTranslateSharpness;
        
        public float orientationSharpness;
        
        public float cameraWobbleSensitivity;
        
        public float camPitch;
        
        public float camHdg;
        
        public Vessel_Wrapper vesselTarget;
        
        public UnityEngine.Camera[] cameras;
        
        public Camera_Wrapper mainCamera;
        
        public FlightCamera.Modes mode;
        
        public FlightCamera.Modes autoMode;
        
        public FoRModes FoRMode;
        
        public UnityEngine.GUIStyle modeReadoutStyle;
        
        public Vector3_Wrapper targetDirection;
        
        public Vector3_Wrapper endDirection;
        
        public bool updateActive;
        
        public float fovDefault;
        
        public Callback AbortExternalControl;
        
        public FlightCamera_Wrapper fetch;
        
        public float Distance;
        
        public Quaternion_Wrapper pivotRotation;
        
        public float CamPitch;
        
        public float CamHdg;
        
        public int CamMode;
        
        public FoRModes FrameOfReferenceMode;
        
        public Transform_Wrapper Target;
        
        public bool useGUILayout;
        
        public bool enabled;
        
        public Transform_Wrapper transform;
        
        public Rigidbody_Wrapper rigidbody;
        
        public Rigidbody2D_Wrapper rigidbody2D;
        
        public Camera_Wrapper camera;
        
        public Light_Wrapper light;
        
        public Animation_Wrapper animation;
        
        public ConstantForce_Wrapper constantForce;
        
        public Renderer_Wrapper renderer;
        
        public AudioSource_Wrapper audio;
        
        public GUIText_Wrapper guiText;
        
        public NetworkView_Wrapper networkView;
        
        public GUIElement_Wrapper guiElement;
        
        public GUITexture_Wrapper guiTexture;
        
        public Collider_Wrapper collider;
        
        public Collider2D_Wrapper collider2D;
        
        public HingeJoint_Wrapper hingeJoint;
        
        public ParticleEmitter_Wrapper particleEmitter;
        
        public ParticleSystem_Wrapper particleSystem;
        
        public GameObject_Wrapper gameObject;
        
        public bool active;
        
        public string tag;
        
        public string name;
        
        public UnityEngine.HideFlags hideFlags;
    }
}
